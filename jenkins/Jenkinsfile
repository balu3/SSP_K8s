
def doBuild(delivery) {
def settings = delivery.settings()
//cluster settings
 def clusterSettings = readYaml file: 'jenkins/cluster.yaml'
 def context = clusterSettings.context
 def namespace = clusterSettings.namespace

stage('build') {
 def image = docker.build("ssp25/ssp-web-node")
 image.push(delivery.branchTag())
 image.push(delivery.branchAndBuildTag())
}

if('develop' == delivery.branchTag()) {
 stage('deploy') {
     docker.image(settings.kubectlImage).inside {
       del.deploymentUpdateSspWebNode(context, namespace, "ssp25/ssp-web-node:${delivery.branchAndBuildTag()}")
     }
 }
}
}

/*
COMMONS JOB TEMPLATE V0.1 (subdirectoryCheckout, scmFirst)
SEE: DevOps-chapter/delivery
 */
 def delivery
node ('ssp-mac') {
     deleteDir()

    try {

      stage("Code Checkout")
        {
        checkout scm
        delivery = load 'jenkins/mobile.groovy'
        }

    //   delivery.notify("Starting")
        withCredentials([usernamePassword(credentialsId: 'ssp-docker-hub', passwordVariable: 'dockerhubPass', usernameVariable: 'dockerhubUser')]) {
            sh "/usr/local/bin/docker login -u ${dockerhubUser} -p ${dockerhubPass}"
        }

  doBuild(del) // You implement doBuild

//     delivery.notify("SUCCESS")
    } catch (e) {
        currentBuild.result = "FAILED"
        echo "${e.getClass().getName()} - ${e.getMessage()}"
  //  delivery.notifyFailure("${e.getClass().getName()} - ${e.getMessage()}")
        throw e
    }
}
/*
END COMMONS JOB TEMPLATE
 */
