//def doBuild(del) {

  //}


/*
COMMONS JOB TEMPLATE V0.1 (subdirectoryCheckout, scmFirst)
SEE: DevOps-chapter/delivery
 */
def del
node("ssp-mac") {
    checkout scm

    stage(name: 'delivery') {
      del = load 'jenkins/delivery.groovy'
      sh '/bin/ls .'
    }

    try {
    //   delivery.notify("Starting")
        withCredentials([usernamePassword(credentialsId: 'ssp-docker-hub', passwordVariable: 'dockerhubPass', usernameVariable: 'dockerhubUser')]) {
            sh "/usr/local/bin/docker login -u ${dockerhubUser} -p ${dockerhubPass}"
        }

  //    doBuild(del) // You implement doBuild
       def settings = del.settings()
      //cluster settings
          def clusterSettings = readYaml file: 'jenkins/cluster.yaml'
          def context = clusterSettings.context
          def namespace = clusterSettings.namespace

    stage('build') {
          def image = docker.build("ssp25/ssp-web-node")
          image.push(del.branchTag())
          image.push(del.branchAndBuildTag())
      }

   if('develop' == del.branchTag()) {
          stage('deploy') {
              docker.image(settings.kubectlImage).inside {
                del.deploymentUpdateSspWebNode(context, namespace, "ssp25/ssp-web-node:${delivery.branchAndBuildTag()}")
              }
          }
        }

//     delivery.notify("SUCCESS")
    } catch (e) {
        currentBuild.result = "FAILED"
        echo "${e.getClass().getName()} - ${e.getMessage()}"
  //  delivery.notifyFailure("${e.getClass().getName()} - ${e.getMessage()}")
        throw e
    }
}
/*
END COMMONS JOB TEMPLATE
 */
